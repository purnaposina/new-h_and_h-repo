{
	"name": "derived coloumn",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dataflowsalary",
						"type": "DatasetReference"
					},
					"name": "salary"
				},
				{
					"dataset": {
						"referenceName": "dataflowdepartment",
						"type": "DatasetReference"
					},
					"name": "department"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dataflowderivedcoloumn",
						"type": "DatasetReference"
					},
					"name": "dataflowsink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "lookup1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID as string,",
				"          YearsExperience as string,",
				"          Salary as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> salary",
				"source(output(",
				"          DEPARTMENT_ID as string,",
				"          DEPARTMENT_NAME as string,",
				"          MANAGER_ID as string,",
				"          LOCATION_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> department",
				"salary, department join(ID == DEPARTMENT_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"lookup1 derive(multiplyBy10 = iif(DEPARTMENT_NAME == 'IT', Salary * 10, Salary)) ~> derivedColumn1",
				"salary, department lookup(ID == DEPARTMENT_ID,",
				"     multiple: true,",
				"     broadcast: 'auto')~> lookup1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ID as string,",
				"          Industry as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> dataflowsink1"
			]
		}
	}
}